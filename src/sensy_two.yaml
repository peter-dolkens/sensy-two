---
esphome:
  name: sensy-two
  friendly_name: Sensy Two
  name_add_mac_suffix: true
  project:
    name: Sensy-Two.S2 mmWave Sensor
    version: v0.0.1

  includes:
    - components/sensy_two/sensy_two_component.h

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: esp-idf

external_components:
  - source:
      type: local
      path: components

wifi:
  ap:
    ssid: "I am Sensy!"
    ap_timeout: 1min

captive_portal:

esp32_improv:
  authorizer: none
  identify_duration: 10s
  wifi_timeout: 1min

api:

logger:
  level: ERROR
#   level: VERY_VERBOSE
#   logs:
#     wifi: ERROR
#     ms72sf1: VERY_VERBOSE
#     ms72sf1_uart: VERY_VERBOSE
#     esphome: DEBUG
#     default: ERROR
#     sensor: ERROR
#     text_sensor: ERROR
#     template: ERROR
#     uart: ERROR
#     mdns: ERROR
#     esphome.core: ERROR
#     esp32_ble: ERROR
#     esp32_ble_server: ERROR
#     esp32_improv: ERROR
#     captive_portal: ERROR
#     web_server: ERROR
#     api: ERROR
#     api.service: ERROR
#     esp32.preferences: ERROR
#     ota: ERROR
#     number: ERROR
#     ld2450: DEBUG

web_server:
  port: 80
  log: false

ota:
  platform: esphome

uart:
  id: ms72sf1
  baud_rate: 115200
  tx_pin: 17
  rx_pin: 16
  rx_buffer_size: 1024
  # debug:
  #   direction: BOTH
  #   dummy_receiver: false
  #   after:
  #     delimiter: "\n"
  #   sequence:
  #     - lambda: UARTDebug::log_string(direction, bytes);

sensy_two:
  id: sensy_component
  uart_id: ms72sf1
  t1_x:
    id: t1_x
    name: "Target 01 X Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-x-box-outline
  t1_y:
    id: t1_y
    name: "Target 01 Y Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-y-box-outline
  t1_z:
    id: t1_z
    name: "Target 01 Z Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-z-box-outline
  t1_angle:
    id: t1_angle
    name: "Target 01 Angle"
    unit_of_measurement: "°"
    accuracy_decimals: 2
    icon: mdi:format-text-rotation-angle-up
  t1_speed:
    id: t1_speed
    name: "Target 01 Speed"
    unit_of_measurement: "cm/s"
    accuracy_decimals: 0
    icon: mdi:speedometer
  t1_distance_resolution:
    id: t1_distance_resolution
    name: "Target 01 Distance Resolution"
    unit_of_measurement: "cm"
    icon: mdi:diameter-outline
  t1_distance:
    id: t1_distance
    name: "Target 01 Distance"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:map-marker-distance
  t2_x:
    id: t2_x
    name: "Target 02 X Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-x-box-outline
  t2_y:
    id: t2_y
    name: "Target 02 Y Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-y-box-outline
  t2_z:
    id: t2_z
    name: "Target 02 Z Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-z-box-outline
  t2_angle:
    id: t2_angle
    name: "Target 02 Angle"
    unit_of_measurement: "°"
    accuracy_decimals: 2
    icon: mdi:format-text-rotation-angle-up
  t2_speed:
    id: t2_speed
    name: "Target 02 Speed"
    unit_of_measurement: "cm/s"
    accuracy_decimals: 0
    icon: mdi:speedometer
  t2_distance_resolution:
    id: t2_distance_resolution
    name: "Target 02 Distance Resolution"
    unit_of_measurement: "cm"
    icon: mdi:diameter-outline
  t2_distance:
    id: t2_distance
    name: "Target 02 Distance"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:map-marker-distance
  t3_x:
    id: t3_x
    name: "Target 03 X Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-x-box-outline
  t3_y:
    id: t3_y
    name: "Target 03 Y Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-y-box-outline
  t3_z:
    id: t3_z
    name: "Target 03 Z Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-z-box-outline
  t3_angle:
    id: t3_angle
    name: "Target 03 Angle"
    unit_of_measurement: "°"
    accuracy_decimals: 2
    icon: mdi:format-text-rotation-angle-up
  t3_speed:
    id: t3_speed
    name: "Target 03 Speed"
    unit_of_measurement: "cm/s"
    accuracy_decimals: 0
    icon: mdi:speedometer
  t3_distance_resolution:
    id: t3_distance_resolution
    name: "Target 03 Distance Resolution"
    unit_of_measurement: "cm"
    icon: mdi:diameter-outline
  t3_distance:
    id: t3_distance
    name: "Target 03 Distance"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:map-marker-distance
  t4_x:
    id: t4_x
    name: "Target 04 X Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-x-box-outline
  t4_y:
    id: t4_y
    name: "Target 04 Y Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-y-box-outline
  t4_z:
    id: t4_z
    name: "Target 04 Z Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-z-box-outline
  t4_angle:
    id: t4_angle
    name: "Target 04 Angle"
    unit_of_measurement: "°"
    accuracy_decimals: 2
    icon: mdi:format-text-rotation-angle-up
  t4_speed:
    id: t4_speed
    name: "Target 04 Speed"
    unit_of_measurement: "cm/s"
    accuracy_decimals: 0
    icon: mdi:speedometer
  t4_distance_resolution:
    id: t4_distance_resolution
    name: "Target 04 Distance Resolution"
    unit_of_measurement: "cm"
    icon: mdi:diameter-outline
  t4_distance:
    id: t4_distance
    name: "Target 04 Distance"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:map-marker-distance
  t5_x:
    id: t5_x
    name: "Target 05 X Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-x-box-outline
  t5_y:
    id: t5_y
    name: "Target 05 Y Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-y-box-outline
  t5_z:
    id: t5_z
    name: "Target 05 Z Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-z-box-outline
  t5_angle:
    id: t5_angle
    name: "Target 05 Angle"
    unit_of_measurement: "°"
    accuracy_decimals: 2
    icon: mdi:format-text-rotation-angle-up
  t5_speed:
    id: t5_speed
    name: "Target 05 Speed"
    unit_of_measurement: "cm/s"
    accuracy_decimals: 0
    icon: mdi:speedometer
  t5_distance_resolution:
    id: t5_distance_resolution
    name: "Target 05 Distance Resolution"
    unit_of_measurement: "cm"
    icon: mdi:diameter-outline
  t5_distance:
    id: t5_distance
    name: "Target 05 Distance"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:map-marker-distance
  t6_x:
    id: t6_x
    name: "Target 06 X Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-x-box-outline
  t6_y:
    id: t6_y
    name: "Target 06 Y Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-y-box-outline
  t6_z:
    id: t6_z
    name: "Target 06 Z Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-z-box-outline
  t6_angle:
    id: t6_angle
    name: "Target 06 Angle"
    unit_of_measurement: "°"
    accuracy_decimals: 2
    icon: mdi:format-text-rotation-angle-up
  t6_speed:
    id: t6_speed
    name: "Target 06 Speed"
    unit_of_measurement: "cm/s"
    accuracy_decimals: 0
    icon: mdi:speedometer
  t6_distance_resolution:
    id: t6_distance_resolution
    name: "Target 06 Distance Resolution"
    unit_of_measurement: "cm"
    icon: mdi:diameter-outline
  t6_distance:
    id: t6_distance
    name: "Target 06 Distance"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:map-marker-distance
  t7_x:
    id: t7_x
    name: "Target 07 X Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-x-box-outline
  t7_y:
    id: t7_y
    name: "Target 07 Y Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-y-box-outline
  t7_z:
    id: t7_z
    name: "Target 07 Z Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-z-box-outline
  t7_angle:
    id: t7_angle
    name: "Target 07 Angle"
    unit_of_measurement: "°"
    accuracy_decimals: 2
    icon: mdi:format-text-rotation-angle-up
  t7_speed:
    id: t7_speed
    name: "Target 07 Speed"
    unit_of_measurement: "cm/s"
    accuracy_decimals: 0
    icon: mdi:speedometer
  t7_distance_resolution:
    id: t7_distance_resolution
    name: "Target 07 Distance Resolution"
    unit_of_measurement: "cm"
    icon: mdi:diameter-outline
  t7_distance:
    id: t7_distance
    name: "Target 07 Distance"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:map-marker-distance
  t8_x:
    id: t8_x
    name: "Target 08 X Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-x-box-outline
  t8_y:
    id: t8_y
    name: "Target 08 Y Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-y-box-outline
  t8_z:
    id: t8_z
    name: "Target 08 Z Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-z-box-outline
  t8_angle:
    id: t8_angle
    name: "Target 08 Angle"
    unit_of_measurement: "°"
    accuracy_decimals: 2
    icon: mdi:format-text-rotation-angle-up
  t8_speed:
    id: t8_speed
    name: "Target 08 Speed"
    unit_of_measurement: "cm/s"
    accuracy_decimals: 0
    icon: mdi:speedometer
  t8_distance_resolution:
    id: t8_distance_resolution
    name: "Target 08 Distance Resolution"
    unit_of_measurement: "cm"
    icon: mdi:diameter-outline
  t8_distance:
    id: t8_distance
    name: "Target 08 Distance"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:map-marker-distance
  t9_x:
    id: t9_x
    name: "Target 09 X Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-x-box-outline
  t9_y:
    id: t9_y
    name: "Target 09 Y Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-y-box-outline
  t9_z:
    id: t9_z
    name: "Target 09 Z Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-z-box-outline
  t9_angle:
    id: t9_angle
    name: "Target 09 Angle"
    unit_of_measurement: "°"
    accuracy_decimals: 2
    icon: mdi:format-text-rotation-angle-up
  t9_speed:
    id: t9_speed
    name: "Target 09 Speed"
    unit_of_measurement: "cm/s"
    accuracy_decimals: 0
    icon: mdi:speedometer
  t9_distance_resolution:
    id: t9_distance_resolution
    name: "Target 09 Distance Resolution"
    unit_of_measurement: "cm"
    icon: mdi:diameter-outline
  t9_distance:
    id: t9_distance
    name: "Target 09 Distance"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:map-marker-distance
  t10_x:
    id: t10_x
    name: "Target 10 X Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-x-box-outline
  t10_y:
    id: t10_y
    name: "Target 10 Y Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-y-box-outline
  t10_z:
    id: t10_z
    name: "Target 10 Z Coordinate"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:alpha-z-box-outline
  t10_angle:
    id: t10_angle
    name: "Target 10 Angle"
    unit_of_measurement: "°"
    accuracy_decimals: 2
    icon: mdi:format-text-rotation-angle-up
  t10_speed:
    id: t10_speed
    name: "Target 10 Speed"
    unit_of_measurement: "cm/s"
    accuracy_decimals: 0
    icon: mdi:speedometer
  t10_distance_resolution:
    id: t10_distance_resolution
    name: "Target 10 Distance Resolution"
    unit_of_measurement: "cm"
    icon: mdi:diameter-outline
  t10_distance:
    id: t10_distance
    name: "Target 10 Distance"
    unit_of_measurement: "cm"
    accuracy_decimals: 2
    icon: mdi:map-marker-distance
  radar_firmware:
    name: "RADAR | Firmware"
    entity_category: diagnostic
    icon: mdi:git
  radar_mac:
    name: "RADAR | MAC"
    entity_category: diagnostic
    icon: mdi:card-bulleted-settings
  sensy_firmware:
    name: "SENSY | Firmware"
    entity_category: diagnostic
    icon: mdi:git

number:
  - platform: template
    id: zone1_x_begin
    name: "Zone 1 X Begin"
    icon: mdi:arrow-collapse-left
    min_value: -1000
    initial_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true
  - platform: template
    id: zone1_x_end
    name: "Zone 1 X End"
    icon: mdi:arrow-collapse-right
    min_value: -1000
    initial_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true
  - platform: template
    id: zone1_y_begin
    name: "Zone 1 Y Begin"
    icon: mdi:arrow-collapse-up
    min_value: -1000
    initial_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true
  - platform: template
    id: zone1_y_end
    name: "Zone 1 Y End"
    icon: mdi:arrow-collapse-down
    min_value: -1000
    initial_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true

  - platform: template
    id: zone1_movement_threshold
    name: "Zone 1 Movement Threshold"
    unit_of_measurement: "cm/s"
    min_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true
    initial_value: 0
    entity_category: config

  - platform: template
    id: zone2_x_begin
    name: "Zone 2 X Begin"
    icon: mdi:arrow-collapse-left
    min_value: -1000
    initial_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true
  - platform: template
    id: zone2_x_end
    name: "Zone 2 X End"
    icon: mdi:arrow-collapse-right
    min_value: -1000
    initial_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true
  - platform: template
    id: zone2_y_begin
    name: "Zone 2 Y Begin"
    icon: mdi:arrow-collapse-up
    min_value: -1000
    initial_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true
  - platform: template
    id: zone2_y_end
    name: "Zone 2 Y End"
    icon: mdi:arrow-collapse-down
    min_value: -1000
    initial_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true

  - platform: template
    id: zone2_movement_threshold
    name: "Zone 2 Movement Threshold"
    unit_of_measurement: "cm/s"
    min_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true
    initial_value: 0
    entity_category: config

  - platform: template
    id: zone3_x_begin
    name: "Zone 3 X Begin"
    icon: mdi:arrow-collapse-left
    min_value: -1000
    initial_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true
  - platform: template
    id: zone3_x_end
    name: "Zone 3 X End"
    icon: mdi:arrow-collapse-right
    min_value: -1000
    initial_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true
  - platform: template
    id: zone3_y_begin
    name: "Zone 3 Y Begin"
    icon: mdi:arrow-collapse-up
    min_value: -1000
    initial_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true
  - platform: template
    id: zone3_y_end
    name: "Zone 3 Y End"
    icon: mdi:arrow-collapse-down
    min_value: -1000
    initial_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true

  - platform: template
    id: zone3_movement_threshold
    name: "Zone 3 Movement Threshold"
    unit_of_measurement: "cm/s"
    min_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true
    initial_value: 0
    entity_category: config

  - platform: template
    id: exclusion_x_begin
    name: "Exclusion X Begin"
    icon: mdi:arrow-collapse-left
    min_value: -1000
    initial_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true
  - platform: template
    id: exclusion_x_end
    name: "Exclusion X End"
    icon: mdi:arrow-collapse-right
    min_value: -1000
    initial_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true
  - platform: template
    id: exclusion_y_begin
    name: "Exclusion Y Begin"
    icon: mdi:arrow-collapse-up
    min_value: -1000
    initial_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true
  - platform: template
    id: exclusion_y_end
    name: "Exclusion Y End"
    icon: mdi:arrow-collapse-down
    min_value: -1000
    initial_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true

  - platform: template
    id: radar_sensitivity
    name: "Sensitivity"
    min_value: 1
    max_value: 19
    step: 1
    optimistic: true
    restore_value: true
    entity_category: config
    on_value:
      then:
        - lambda: 'id(sensy_component)->radar_sensitivity((int)id(radar_sensitivity).state);'

  - platform: template
    id: radar_report_interval
    name: "Report Interval"
    min_value: 100
    max_value: 10000
    step: 100
    mode: box
    unit_of_measurement: "ms"
    optimistic: true
    restore_value: true
    initial_value: 200
    entity_category: config
    on_value:
      then:
        - lambda: 'id(sensy_component)->radar_report_interval((int)id(radar_report_interval).state);'

  - platform: template
    id: radar_monitor_interval
    name: "Monitor Interval"
    min_value: 1
    max_value: 99
    step: 1
    mode: box
    unit_of_measurement: "s"
    optimistic: true
    restore_value: true
    initial_value: 1
    entity_category: config
    on_value:
      then:
        - lambda: 'id(sensy_component)->radar_monitor_interval((int)id(radar_monitor_interval).state);'

  - platform: template
    id: radar_heartbeat_interval
    name: "Heartbeat Interval"
    min_value: 10
    max_value: 99
    step: 1
    icon: mdi:timer-outline
    mode: box
    unit_of_measurement: "s"
    optimistic: true
    restore_value: true
    initial_value: 10
    entity_category: config
    on_value:
      then:
        - lambda: 'id(sensy_component)->radar_heartbeat_timeout((int)id(radar_heartbeat_interval).state);'

  - platform: template
    id: radar_range
    name: "Detection Range"
    icon: mdi:signal-distance-variant
    min_value: 10
    max_value: 1000
    step: 10
    mode: box
    unit_of_measurement: "cm"
    optimistic: true
    restore_value: true
    initial_value: 600
    on_value:
      then:
        - lambda: 'id(sensy_component)->radar_range((int)id(radar_range).state);'

  - platform: template
    id: publish_interval
    name: "Publish Interval"
    min_value: 100
    max_value: 1000
    step: 100
    mode: box
    unit_of_measurement: "ms"
    optimistic: true
    restore_value: true
    entity_category: config
    on_value:
      then:
        - lambda: 'id(sensy_component)->set_publish_interval_ms(id(publish_interval).state);'

  - platform: template
    id: any_movement_threshold
    name: "Any Movement Threshold"
    unit_of_measurement: "cm/s"
    min_value: 0
    max_value: 1000
    step: 1
    optimistic: true
    restore_value: true
    initial_value: 0
    entity_category: config

  - platform: template
    id: rotation_x
    name: "Rotation X"
    unit_of_measurement: "°"
    icon: mdi:axis-x-rotate-clockwise
    min_value: -180
    max_value: 180
    step: 1
    optimistic: true
    restore_value: true
    on_value:
      then:
        - lambda: 'id(sensy_component)->set_rotation_x_deg(id(rotation_x).state);'

  - platform: template
    id: rotation_y
    name: "Rotation Y"
    unit_of_measurement: "°"
    icon: mdi:axis-y-rotate-clockwise
    min_value: -180
    max_value: 180
    step: 1
    optimistic: true
    restore_value: true
    on_value:
      then:
        - lambda: 'id(sensy_component)->set_rotation_y_deg(id(rotation_y).state);'

  - platform: template
    id: rotation_z
    name: "Rotation Z"
    unit_of_measurement: "°"
    icon: mdi:axis-z-rotate-clockwise
    min_value: -180
    max_value: 180
    step: 1
    optimistic: true
    restore_value: true
    on_value:
      then:
        - lambda: 'id(sensy_component)->set_rotation_z_deg(id(rotation_z).state);'

button:
  - platform: template
    name: "RADAR | Restart Module"
    icon: mdi:restart
    on_press:
      - lambda: 'id(sensy_component)->apply_settings();'
    entity_category: diagnostic
  - platform: template
    name: "RADAR | Capture Points"
    icon: mdi:radar
    on_press:
      - lambda: 'id(sensy_component)->radar_capture();'
    entity_category: diagnostic

sensor:
  - platform: template
    name: "All Targets Count"
    update_interval: 100ms
    accuracy_decimals: 0
    lambda: |-
      return id(sensy_component)->count_all_targets();
  - platform: template
    name: "Zone 1 Targets Count"
    update_interval: 100ms
    accuracy_decimals: 0
    lambda: |-
      return id(sensy_component)->count_targets_in_zone(
        id(zone1_x_begin).state, id(zone1_x_end).state,
        id(zone1_y_begin).state, id(zone1_y_end).state,
        id(exclusion_x_begin).state, id(exclusion_x_end).state,
        id(exclusion_y_begin).state, id(exclusion_y_end).state);


  - platform: template
    name: "Zone 2 Targets Count"
    update_interval: 100ms
    accuracy_decimals: 0
    lambda: |-
      return id(sensy_component)->count_targets_in_zone(
        id(zone2_x_begin).state, id(zone2_x_end).state,
        id(zone2_y_begin).state, id(zone2_y_end).state,
        id(exclusion_x_begin).state, id(exclusion_x_end).state,
        id(exclusion_y_begin).state, id(exclusion_y_end).state);


  - platform: template
    name: "Zone 3 Targets Count"
    update_interval: 100ms
    accuracy_decimals: 0
    lambda: |-
      return id(sensy_component)->count_targets_in_zone(
        id(zone3_x_begin).state, id(zone3_x_end).state,
        id(zone3_y_begin).state, id(zone3_y_end).state,
        id(exclusion_x_begin).state, id(exclusion_x_end).state,
        id(exclusion_y_begin).state, id(exclusion_y_end).state);

  - platform: internal_temperature
    name: "ESP32 | Temperature"
    entity_category: diagnostic
    icon: mdi:thermometer
    update_interval: 15s

  - platform: uptime
    name: "ESP32 | Uptime (Seconds)"
    id: esp32_uptime_seconds
    entity_category: diagnostic
    icon: mdi:sort-clock-descending
    update_interval: 15s
    internal: true

  - platform: wifi_signal
    name: "ESP32 | WiFi RSSI"
    entity_category: diagnostic
    update_interval: 15s


binary_sensor:
  - platform: template
    name: "Any Presence"
    device_class: presence
    lambda: |-
      return id(sensy_component)->count_all_targets() > 0;
  - platform: template
    name: "Any Movement"
    device_class: motion
    lambda: |-
      return id(sensy_component)->movement_exceeds(id(any_movement_threshold).state);
  - platform: template
    name: "Zone 1 Presence"
    device_class: presence
    lambda: |-
      return id(sensy_component)->count_targets_in_zone(
        id(zone1_x_begin).state, id(zone1_x_end).state,
        id(zone1_y_begin).state, id(zone1_y_end).state,
        id(exclusion_x_begin).state, id(exclusion_x_end).state,
        id(exclusion_y_begin).state, id(exclusion_y_end).state) > 0;
  - platform: template
    name: "Zone 1 Movement"
    device_class: motion
    lambda: |-
      return id(sensy_component)->zone_movement_exceeds(
        id(zone1_x_begin).state, id(zone1_x_end).state,
        id(zone1_y_begin).state, id(zone1_y_end).state,
        id(exclusion_x_begin).state, id(exclusion_x_end).state,
        id(exclusion_y_begin).state, id(exclusion_y_end).state,
        id(zone1_movement_threshold).state);

  - platform: template
    name: "Zone 2 Presence"
    device_class: presence
    lambda: |-
      return id(sensy_component)->count_targets_in_zone(
        id(zone2_x_begin).state, id(zone2_x_end).state,
        id(zone2_y_begin).state, id(zone2_y_end).state,
        id(exclusion_x_begin).state, id(exclusion_x_end).state,
        id(exclusion_y_begin).state, id(exclusion_y_end).state) > 0;
  - platform: template
    name: "Zone 2 Movement"
    device_class: motion
    lambda: |-
      return id(sensy_component)->zone_movement_exceeds(
        id(zone2_x_begin).state, id(zone2_x_end).state,
        id(zone2_y_begin).state, id(zone2_y_end).state,
        id(exclusion_x_begin).state, id(exclusion_x_end).state,
        id(exclusion_y_begin).state, id(exclusion_y_end).state,
        id(zone2_movement_threshold).state);

  - platform: template
    name: "Zone 3 Presence"
    device_class: presence
    lambda: |-
      return id(sensy_component)->count_targets_in_zone(
        id(zone3_x_begin).state, id(zone3_x_end).state,
        id(zone3_y_begin).state, id(zone3_y_end).state,
        id(exclusion_x_begin).state, id(exclusion_x_end).state,
        id(exclusion_y_begin).state, id(exclusion_y_end).state) > 0;
  - platform: template
    name: "Zone 3 Movement"
    device_class: motion
    lambda: |-
      return id(sensy_component)->zone_movement_exceeds(
        id(zone3_x_begin).state, id(zone3_x_end).state,
        id(zone3_y_begin).state, id(zone3_y_end).state,
        id(exclusion_x_begin).state, id(exclusion_x_end).state,
        id(exclusion_y_begin).state, id(exclusion_y_end).state,
        id(zone3_movement_threshold).state);

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "ESP32 | IP"
      entity_category: diagnostic
      icon: mdi:ip-network
      update_interval: 15s
    ssid:
      name: "ESP32 | SSID"
      entity_category: diagnostic
      icon: mdi:wifi-settings
      update_interval: 15s
    mac_address:
      name: "ESP32 | MAC"
      entity_category: diagnostic
      icon: mdi:card-bulleted-settings


  - platform: template
    name: "ESP32 | WiFi Strength"
    entity_category: diagnostic
    icon: mdi:signal-cellular-3
    update_interval: 15s
    lambda: |-
      int rssi = wifi::global_wifi_component->wifi_rssi();
      if (rssi < -90) {
        return std::string("Very Weak");
      } else if (rssi < -80) {
        return std::string("Weak");
      } else if (rssi < -70) {
        return std::string("Moderate");
      } else if (rssi < -60) {
        return std::string("Strong");
      } else {
        return std::string("Very Strong");
      }

  - platform: template
    name: "ESP32 | Uptime"
    icon: mdi:sort-clock-descending
    entity_category: diagnostic
    update_interval: 15s
    lambda: |-
      int uptime = id(esp32_uptime_seconds).state;
      int hours = uptime / 3600;
      int minutes = (uptime % 3600) / 60;
      int seconds = uptime % 60;
      char buffer[10];
      snprintf(buffer, sizeof(buffer), "%02d:%02d:%02d", hours, minutes, seconds);
      return std::string(buffer);

